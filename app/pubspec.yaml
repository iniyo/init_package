name: init_package
description: "init_settings_package_all_os"
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.5.1

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.

  # network
  dio: ^5.6.0                # 네트워크 요청을 처리하기 위한 HTTP 클라이언트

  # UI
  cupertino_icons: ^1.0.8     # iOS 스타일의 Cupertino 위젯에서 사용할 수 있는 아이콘 제공
  flutter_svg: ^2.0.10+1      # SVG 이미지 파일을 Flutter에서 렌더링할 수 있게 함

  # permission
  permission_handler: ^11.3.1 # 앱이 필요한 권한을 요청하고 상태를 확인하는 기능 제공

  # local data_storage
  hive: ^2.2.3                # 경량의 NoSQL 데이터베이스로 로컬 데이터 저장소로 사용

  # URL
  url_launcher: ^6.3.0        # 앱에서 웹 브라우저를 열거나 외부 앱을 호출하는 기능 제공

  # navigation
  go_router: ^14.2.7          # 선언적 라우팅 시스템으로 네비게이션을 관리하는 기능 제공

  # state
  flutter_riverpod: ^2.5.1    # 상태 관리를 위한 Riverpod 패키지, 비동기 데이터 흐름을 관리
  riverpod_annotation: ^2.3.5 # Flutter에서 전역 상태 관리를 지원, 의존성 주입, Future, Stream 등 비동기 데이터 관리
  hooks_riverpod: ^2.5.2

  # env config
  flutter_dotenv: ^5.1.0      # .env 파일에서 환경 변수를 로드하는 기능 제공
  envied: ^0.5.4+1            # 환경 변수를 안전하게 암호화하여 관리하는 기능 제공

  # dependency graph
  lakos: ^2.0.4               # 코드 의존성 그래프를 시각화할 수 있는 도구

  # JSON 처리
  json_annotation: ^4.5.0     # JSON 직렬화/역직렬화를 위한 어노테이션 제공

  # project name change
  rename: ^3.0.2              # 프로젝트 및 앱의 이름을 변경할 수 있는 도구

  # 범용적인 I/O와 HTML 처리
  universal_io: ^2.2.2        # 다양한 플랫폼에서의 파일 I/O 및 네트워크 I/O 처리
  universal_html: ^2.2.4      # 다양한 플랫폼에서 HTML 문서를 처리하는 기능 제공
  logman: ^0.0.21




dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^4.0.0
  envied_generator: ^0.5.4+1
  build_runner: ^2.4.12

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
